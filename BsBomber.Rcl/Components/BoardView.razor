@using System.Globalization
@using BsBomber.Core.Model
@using BsBomber.Contracts
<div>
    <svg width="@(Board.Width*CellOuterSize)" height="@(Board.Height*CellOuterSize)">
        @for (var y = 0; y < Board.Height; y++)
        {
            for (var x = 0; x < Board.Width; x++)
            {
                var coordinate = new CoordinateDto(x, y);
                <rect @key="@($"board_{x}_{y}")" x="@GetSvgX(coordinate)" y="@GetSvgY(coordinate)" width="@CellSize" height="@CellSize" fill="#c0c0c0"></rect>
            }
        }

        @* Miny *@
        <g transform="translate(-@CellSizeHalf, -@CellSizeHalf)">
            @foreach (var mine in Board.Mines)
            {
                <image href="mina.png" x="@(GetSvgX(mine)+CellSize/2)" y="@(GetSvgY(mine)+CellSize/2)" width="@CellSize" height="@CellSize" />
            }
        

            @* Bomby *@
            @foreach (var bomb in Board.Bombs)
            {
                <image href="bomba.png" x="@(GetSvgX(bomb.Position)+CellSize/2)" y="@(GetSvgY(bomb.Position)+CellSize/2)" width="@CellSize" height="@CellSize" />
            }

            @* Exploze *@
            @foreach (var fire in Board.Fires)
            {
                var alpha = Math.Max(0, Math.Min(255, ((fire.Intensity + 1) * 255) / (Board.MaximumFireIntensity + 1)));
                var opacity = (alpha / 255.0).ToString(CultureInfo.InvariantCulture);
                <image href="fire.png" x="@(GetSvgX(fire.Position)+CellSize/2)" y="@(GetSvgY(fire.Position)+CellSize/2)" width="@CellSize" height="@CellSize" style="opacity:@opacity;" />
            }
        </g>

        @* Bombeři *@
        @foreach (var bomber in Board.Bombers.OrderBy(s => s.Alive ? 1 : 0))
        {
            @Bomber(bomber)
        }

    </svg>
</div>



@code{

    RenderFragment Bomber(BomberDto bomber) => @<g class="bomber @(bomber.Alive ? "alive" : "dead")" transform="translate(@(GetSvgX(bomber.Position)), @(GetSvgY(bomber.Position)-2))">
        <!-- Hlava -->
        <circle cx="20" cy="12" r="8" fill="#f2c09c" stroke="#000" stroke-width="0.4"/>
  
        <!-- Oči -->
        <circle cx="17" cy="10" r="1" fill="#000"/>
        <circle cx="23" cy="10" r="1" fill="#000"/>
  
        <!-- Ústa -->
        <path d="M17 14 Q20 16, 23 14" stroke="#000" stroke-width="0.4" fill="none"/>
  
        <!-- Tělo -->
        <rect x="14" y="20" width="12" height="20" fill="@bomber.Color" stroke="#000" stroke-width="0.4"/>
  
        <!-- Ruce -->
        <line x1="14" y1="24" x2="8" y2="30" stroke="#000" stroke-width="0.8"/>
        <line x1="26" y1="24" x2="32" y2="30" stroke="#000" stroke-width="0.8"/>
  
        <!-- Nohy -->
        
    </g>;


}

@code
{
    private const int CellSize = 40;
    private const int CellSizeHalf = CellSize/2;
    private const int CellPadding = 1;
    private const int CellOuterSize = CellSize + CellPadding;

    [Parameter, EditorRequired]
    public required BoardDto Board { get; set; }

    [Parameter, EditorRequired]
    public required Game Game { get; set; }

    private int GetSvgX(CoordinateDto coordinate)
    {
        var result = coordinate.X * CellOuterSize;
        return result;
    }

    private int GetSvgY(CoordinateDto coordinate)
    {
        var result = (Board.Height-1) * CellOuterSize - coordinate.Y * CellOuterSize;
        return result;
    }
}
